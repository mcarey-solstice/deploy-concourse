#!/bin/bash

set -eo pipefail

source "$( dirname "$( readlink -f "${BASH_SOURCE[0]}" )" )"/helpers

###
# Description:
#   Loads the environment based on the `FOUNDATION` environment variable;
#     otherwise, loads the env file
#
# Usage:
#   source "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"/load-env.sh
##

if [ -n "${ENV_DISABLED+x}" ]; then
  log "Environment loading has been disabled"
  return 0
fi

if [ -n "${ENV_LOADED+x}" ]; then
  log "Environment has already been loaded"
  return 0
fi

log "Looking for environment script for $ENV"

__DIR="$( dirname $( readlink -f "${BASH_SOURCE[0]}" ) )"
declare -r __BASEDIR__="$( cd "$__DIR/.." && pwd )"

declare -r ENV_DIRECTORY="${ENV_DIRECTORY:-$__DIR}"

export BOSH_CMD="${BOSH_CMD:-bosh}"
export VAULT_CMD="${VAULT_CMD:-vault}"
export JQ_CMD="${JQ_CMD:-jq}"
export CREDHUB_CMD="${CREDHUB_CMD:-credhub}"

if [ -n "$ENV" ]; then
  log "sourcing $ENV_DIRECTORY/$ENV-env...."
  source "$ENV_DIRECTORY"/$ENV-env
else
  log "sourcing $__DIR/env-template...."
  source "$__DIR"/env-template
fi

declare -r ALIAS_DIRECTORY="${OUTPUT_DIRECTORY:-$__BASEDIR__}/$BOSH_ALIAS"
mkdir -p "$ALIAS_DIRECTORY"

declare -r VENDOR_DIRECTORY="${VENDOR_DIRECTORY:-$__BASEDIR__/vendor}"
mkdir -p "$VENDOR_DIRECTORY"

if [ "$( uname )" = "Darwin" ]; then
  DNS_SERVERS_LIST=( $( echo "$DNS_SERVERS" | $JQ_CMD -r '.[]' ) )
  networksetup -setdnsservers Wi-Fi $DNS_SERVERS_LIST
fi

export http_proxy=$HTTP_PROXY
export https_proxy=$HTTPS_PROXY

if [ "$HTTP_PROXY_REQUIRED" = "true" ]; then
  # Backwards compatability
  if [ -n "$NO_PROXY_PATTERN" ]; then
    log "The NO_PROXY_PATTERN variable is to be deprecated.  Please use the NO_PROXY variable as an nmap range"
    printf -v _no_proxy '%s,' $( eval echo $NO_PROXY_PATTERN )
  fi

  # Split the string by commas
  NO_PROXY=${NO_PROXY//,/ }

  for i in $NO_PROXY; do
    j="$i"
    _j="$( nmap -sL -n $NO_PROXY $_NO_PROXY )"
    if echo "$_j" | grep -vq 'Failed to resolve'; then
      log "Expanding IP Range: $i"
      j="$( echo "$_j" | grep 'Nmap scan report for' | cut -f 5 -d ' ' | tr '\n' ',' )"
    fi

    _no_proxy="$_no_proxy,$j"
  done

  # ltrim ,
  if [ "${_no_proxy:0:1}" = "," ]; then
    _no_proxy="${_no_proxy:1}"
  fi

  # rtrim ,
  len=${#_no_proxy}
  if [ "${_no_proxy:$((len-1))}" = "," ]; then
    _no_proxy="${_no_proxy::$((len-1))}"
  fi

  export NO_PROXY=$_no_proxy
  export no_proxy=$_no_proxy
fi

declare -r ENV_LOADED=
